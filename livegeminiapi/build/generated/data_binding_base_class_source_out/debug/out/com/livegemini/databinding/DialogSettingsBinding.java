// Generated by data binding compiler. Do not edit!
package com.livegemini.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioGroup;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.livegemini.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogSettingsBinding extends ViewDataBinding {
  @NonNull
  public final TextInputEditText apiKeyManualEditText;

  @NonNull
  public final RadioGroup apiKeyRadioGroup;

  @NonNull
  public final RadioGroup apiVersionRadioGroup;

  @NonNull
  public final Button clearLogBtn;

  @NonNull
  public final SwitchMaterial debugOverlaySwitch;

  @NonNull
  public final Button forceConnectBtn;

  @NonNull
  public final TextInputEditText hostManualEditText;

  @NonNull
  public final TextInputEditText modelManualEditText;

  @NonNull
  public final RadioGroup modelRadioGroup;

  @NonNull
  public final Button saveSettingsBtn;

  @NonNull
  public final Button shareLogBtn;

  @NonNull
  public final SeekBar vadSensitivity;

  @NonNull
  public final TextView vadValue;

  protected DialogSettingsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextInputEditText apiKeyManualEditText, RadioGroup apiKeyRadioGroup,
      RadioGroup apiVersionRadioGroup, Button clearLogBtn, SwitchMaterial debugOverlaySwitch,
      Button forceConnectBtn, TextInputEditText hostManualEditText,
      TextInputEditText modelManualEditText, RadioGroup modelRadioGroup, Button saveSettingsBtn,
      Button shareLogBtn, SeekBar vadSensitivity, TextView vadValue) {
    super(_bindingComponent, _root, _localFieldCount);
    this.apiKeyManualEditText = apiKeyManualEditText;
    this.apiKeyRadioGroup = apiKeyRadioGroup;
    this.apiVersionRadioGroup = apiVersionRadioGroup;
    this.clearLogBtn = clearLogBtn;
    this.debugOverlaySwitch = debugOverlaySwitch;
    this.forceConnectBtn = forceConnectBtn;
    this.hostManualEditText = hostManualEditText;
    this.modelManualEditText = modelManualEditText;
    this.modelRadioGroup = modelRadioGroup;
    this.saveSettingsBtn = saveSettingsBtn;
    this.shareLogBtn = shareLogBtn;
    this.vadSensitivity = vadSensitivity;
    this.vadValue = vadValue;
  }

  @NonNull
  public static DialogSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_settings, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogSettingsBinding>inflateInternal(inflater, R.layout.dialog_settings, root, attachToRoot, component);
  }

  @NonNull
  public static DialogSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_settings, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogSettingsBinding>inflateInternal(inflater, R.layout.dialog_settings, null, false, component);
  }

  public static DialogSettingsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogSettingsBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogSettingsBinding)bind(component, view, R.layout.dialog_settings);
  }
}
