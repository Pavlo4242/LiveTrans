// Generated by data binding compiler. Do not edit!
package com.livegemini.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.compose.ui.platform.ComposeView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.livegemini.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button connectDisconnectBtn;

  @NonNull
  public final ScrollView debugOverlayScroll;

  @NonNull
  public final TextView debugOverlayText;

  @NonNull
  public final Button debugSettingsBtn;

  @NonNull
  public final ImageView historyBtn;

  @NonNull
  public final TextView infoText;

  @NonNull
  public final FloatingActionButton micBtn;

  @NonNull
  public final ImageView settingsBtn;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView toolbarInfoText;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final ComposeView transcriptLog;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appBarLayout, Button connectDisconnectBtn, ScrollView debugOverlayScroll,
      TextView debugOverlayText, Button debugSettingsBtn, ImageView historyBtn, TextView infoText,
      FloatingActionButton micBtn, ImageView settingsBtn, TextView statusText,
      TextView toolbarInfoText, MaterialToolbar topAppBar, ComposeView transcriptLog) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBarLayout = appBarLayout;
    this.connectDisconnectBtn = connectDisconnectBtn;
    this.debugOverlayScroll = debugOverlayScroll;
    this.debugOverlayText = debugOverlayText;
    this.debugSettingsBtn = debugSettingsBtn;
    this.historyBtn = historyBtn;
    this.infoText = infoText;
    this.micBtn = micBtn;
    this.settingsBtn = settingsBtn;
    this.statusText = statusText;
    this.toolbarInfoText = toolbarInfoText;
    this.topAppBar = topAppBar;
    this.transcriptLog = transcriptLog;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
